diff --git a/.github/workflows/test.yaml b/.github/workflows/test.yaml
index ddfbd65..c53c0cf 100644
--- a/.github/workflows/test.yaml
+++ b/.github/workflows/test.yaml
@@ -1,28 +1,37 @@
-name: Test
+name: Tests
 
 on:
-  push:
-    branches:
-      - main
-      - dev
-  pull_request:
+  - push
+  - pull_request
 
 jobs:
-  test:
+  tests:
     runs-on: ubuntu-latest
 
     steps:
-      - uses: actions/checkout@v2
-      - uses: actions/setup-node@v2
-      - uses: cachix/install-nix-action@v13
-      - uses: cachix/cachix-action@v10
+      - name: Install Foundry
+        uses: onbjerg/foundry-toolchain@v1.0.6
         with:
-          name: dapp
+          version: nightly
+
+      - name: Install node
+        uses: actions/setup-node@v2
+
+      - name: Clone repo with submodules
+        uses: actions/checkout@v2
+        with:
+          submodules: recursive
+
+      - name: Install yarn
+        run: npm i -g yarn
 
       - name: Install dependencies
-        run: nix-shell --run 'make'
+        run: make
 
+      - name: Show Foundry config
+        run: forge config
+        
       - name: Run tests
-        run: nix-shell --run 'make test'
         env:
-          ALCHEMY_API_KEY: "${{ secrets.ALCHEMY_API_KEY }}"
\ No newline at end of file
+          ALCHEMY_API_KEY: "${{ secrets.ALCHEMY_API_KEY }}"
+        run: make test
\ No newline at end of file
diff --git a/.gitignore b/.gitignore
index 7d8e54b..d3c7de2 100644
--- a/.gitignore
+++ b/.gitignore
@@ -15,3 +15,9 @@ out/
 
 # Seth
 .sethrc
+
+# Gas snapshot
+.gas-snapshot
+
+# Foundry
+cache/
\ No newline at end of file
diff --git a/.secrets b/.secrets
new file mode 100644
index 0000000..c1df815
--- /dev/null
+++ b/.secrets
@@ -0,0 +1 @@
+ALCHEMY_API_KEY=9_HDcgy15Mwo-erR5lcIVurXMXotz3Oz
diff --git a/Makefile b/Makefile
index 277380f..9946c01 100644
--- a/Makefile
+++ b/Makefile
@@ -2,23 +2,21 @@
 # (-include to ignore error if it does not exist)
 -include .env
 
-install: solc update npm
-# dapp deps
-update:; dapp update
-# npm deps for linting etc.
-npm:; yarn install
-# install solc version
-solc:; nix-env -f https://github.com/dapphub/dapptools/archive/master.tar.gz -iA solc-static-versions.solc_0_8_13
+# Update dependencies
+setup           :; make update-libs ; make install-deps
+update-libs     :; git submodule update --init --recursive
+install-deps    :; yarn install
 
 # Build & test & deploy
-build           :; dapp build
-clean           :; dapp clean
-debug           :; ./scripts/run.sh local "dapp debug"
-debug-tx        :; ./scripts/run.sh $(network) "seth run-tx $(tx) --source out/dapp.sol.json --debug"
+build           :; forge build
+clean           :; forge clean
 lint            :; yarn run lint
 size            :; ./scripts/contract-size.sh ${contract}
-snapshot        :; ./scripts/run.sh mainnet "dapp snapshot --rpc"
-snapshot-verify :; ./scripts/run.sh mainnet "dapp check-snapshot --rpc"
-test            :; ./scripts/run.sh mainnet "dapp test --ffi --verbosity 1 --rpc"
-test-local      :; ./scripts/run.sh local "dapp test --ffi --verbosity 1 --match 'local'"
-test-mainnet    :; ./scripts/run.sh mainnet "dapp test --ffi --verbosity 1 --rpc --match 'rpc'"
+test            :; ./scripts/run.sh mainnet
+test-fork       :; ./scripts/run.sh $(network)
+test-local      :; ./scripts/run.sh local
+
+# Not migrated to Foundry yet
+debug           :; ./scripts/debug.sh local "dapp debug"
+debug-tx        :; ./scripts/debug.sh $(network) "seth run-tx $(tx) --source out/dapp.sol.json --debug"
+snapshot        :; ./scripts/debug.sh mainnet "forge snapshot --fork-url ${ETH_RPC_URL} --fork-block-number ${DAPP_TEST_NUMBER}"
diff --git a/foundry.toml b/foundry.toml
new file mode 100644
index 0000000..ac4e2d9
--- /dev/null
+++ b/foundry.toml
@@ -0,0 +1,19 @@
+# Full reference
+# https://onbjerg.github.io/foundry-book/reference/config.html
+
+[default]
+# Solidity
+solc_version = "0.8.13"
+optimizer = true
+optimizer_runs = 8000
+
+# Gas reporting
+gas_reports = ["*"]
+
+verbosity = 1
+
+sender = '0xf1A7dA0000000000000000000000000000000000'
+tx_origin = '0xf1A7dA0000000000000000000000000000000000'
+
+[ci]
+verbosity = 4
\ No newline at end of file
diff --git a/scripts/contract-size.sh b/scripts/contract-size.sh
index e71e3aa..33e3a20 100755
--- a/scripts/contract-size.sh
+++ b/scripts/contract-size.sh
@@ -8,10 +8,8 @@ contract_size() {
 	# select the filename and the contract in it
 	PATTERN=".contracts[\"src/$NAME.sol\"].$NAME"
 
-  dapp build # first, build the contract
-
 	# get the bytecode from the compiled file
-	BYTECODE=0x$(jq -r "$PATTERN.evm.bytecode.object" out/dapp.sol.json)
+	BYTECODE=$(jq -r ".bytecode.object" out/$NAME.sol/$NAME.json)
 	length=$(echo "$BYTECODE" | wc -m)
 	echo $(($length / 2))
 }
@@ -25,8 +23,11 @@ if [[ -z $contract ]]; then
   fi
 fi
 
+echo "Building project..."
+make build
+
 contract_size=$(contract_size ${contract})
 echo "Contract Name: ${contract}"
 echo "Contract Size: ${contract_size} bytes"
 echo
-echo "$(( 24576 - ${contract_size} )) bytes left to reach the smart contract size limit of 24576 bytes."
+echo "$(( 24576 - ${contract_size} )) bytes left to reach the smart contract size limit of 24576 bytes."
\ No newline at end of file
diff --git a/scripts/debug.sh b/scripts/debug.sh
new file mode 100644
index 0000000..58a9e09
--- /dev/null
+++ b/scripts/debug.sh
@@ -0,0 +1,39 @@
+#!/usr/bin/env bash
+set -o errexit
+set -o pipefail
+set -o nounset
+
+if [ -d .env ]; then
+  set -o allexport; source .env; set +o allexport
+fi
+
+if [ -z "$ALCHEMY_API_KEY" ]; then
+  echo "ALCHEMY_API_KEY is undefined in .env";
+  exit 1;
+fi
+
+networks=(local mainnet goerli)
+if [[ ! " ${networks[*]} " =~ " $1 " ]]; then 
+  echo "Unsupported network '$1'";
+  exit 1;
+fi
+
+if [ "$1" == "local" ]; then
+  export ETH_RPC_URL=http://localhost:8545
+elif [ "$1" == "mainnet" ]; then
+  export DAPP_TEST_NUMBER=13627845
+  export DAPP_TEST_CACHE=.cache/mainnet-${DAPP_TEST_NUMBER}
+  export ETH_RPC_URL=https://eth-$1.alchemyapi.io/v2/${ALCHEMY_API_KEY}
+else
+  export ETH_RPC_URL=https://eth-$1.alchemyapi.io/v2/${ALCHEMY_API_KEY}
+fi
+
+set +o nounset
+if [ -n "$DAPP_TEST_CACHE" ]; then
+  if [ ! -d ${DAPP_TEST_CACHE} ]; then
+    dapp --make-cache ${DAPP_TEST_CACHE};
+  fi
+fi
+set -o nounset
+
+eval $2
diff --git a/scripts/run.sh b/scripts/run.sh
index 58a9e09..58214d2 100755
--- a/scripts/run.sh
+++ b/scripts/run.sh
@@ -19,21 +19,10 @@ if [[ ! " ${networks[*]} " =~ " $1 " ]]; then
 fi
 
 if [ "$1" == "local" ]; then
-  export ETH_RPC_URL=http://localhost:8545
+  forge test --ffi --chain-id 99 --match-path $(pwd)/src/test/local --fork-url http://localhost:8545
 elif [ "$1" == "mainnet" ]; then
-  export DAPP_TEST_NUMBER=13627845
-  export DAPP_TEST_CACHE=.cache/mainnet-${DAPP_TEST_NUMBER}
-  export ETH_RPC_URL=https://eth-$1.alchemyapi.io/v2/${ALCHEMY_API_KEY}
+  forge test --chain-id 99 --fork-url https://eth-$1.alchemyapi.io/v2/${ALCHEMY_API_KEY} --fork-block-number 13627845
 else
-  export ETH_RPC_URL=https://eth-$1.alchemyapi.io/v2/${ALCHEMY_API_KEY}
-fi
-
-set +o nounset
-if [ -n "$DAPP_TEST_CACHE" ]; then
-  if [ ! -d ${DAPP_TEST_CACHE} ]; then
-    dapp --make-cache ${DAPP_TEST_CACHE};
-  fi
-fi
-set -o nounset
-
-eval $2
+  ETH_RPC_URL=https://eth-$1.alchemyapi.io/v2/${ALCHEMY_API_KEY}
+  forge test --fork-url $ETH_RPC_URL
+fi
\ No newline at end of file
